#!/usr/bin/python
from PIL import Image
import sys
import getopt

print """
	.   .-. .-. .-. .-.                         
	|   |-  |-| `-.  |  Steganography PNG
	`-' `-' ` ' `-'  '  Least Significant Bit
	.-. .-. .-. . . .-. .-. .-. .-. .-. . . .-. 
	`-.  |  |.. |\|  |  |-   |  |   |-| |\|  |  
	`-' `-' `-' ' ` `-' '   `-' `-' ` ' ' `  '  
	.-. .-. .-.                                 
	|(   |   |  @tfairane ~ www.tfairane.com
	`-' `-'  '  man : -m                                
"""

def bind(cover, secret, output):
	# mask MSB
	more = mask(cover, 0b11111100)
	# mask LSB
	less = mask(secret, 0b00000011)

	imgSize = more.size
	dmore = more.getdata()
	dless = less.getdata()
	support = Image.new("RGB", (imgSize[0], imgSize[1]))
	cdata = []

	for i in range(0, imgSize[0] * imgSize[1]):
		p = []
		for j in range(0, 3):
			p.append(dmore[i][j] + dless[i][j])
		cdata.append(tuple(p))
	support.putdata(cdata)
	support.save(output)

def extract(image, output):
	# LSB extract data
	img = Image.open(image)
	imgSize = img.size
	data = img.getdata()
	support = Image.new("RGB", (imgSize[0], imgSize[1]))
	cdata = []

	for i in range(0, imgSize[0] * imgSize[1]):
		p = []
		for j in range(0, 3):
			p.append((data[i][j] & 0b00000011) << 6)
		cdata.append(tuple(p))
	support.putdata(cdata)
	support.save(output)

def mask(name, mask):
	img = Image.open(name)
	imgSize = img.size
	data = img.getdata()
	support = Image.new("RGB", (imgSize[0], imgSize[1]))
	cdata = []

	for i in range(0, imgSize[0] * imgSize[1]):
		# pixel
		p = []
		for j in range(0, 3):
			p.append(data[i][j] & mask)
		cdata.append(tuple(p))
	support.putdata(cdata)
	return support.copy()

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:], 'mo:c:s:x:')
		cover, secret, recover = None, None, None
	except getopt.GetoptError:
		sys.exit(0)
	for opt, arg in opts:
		if opt == "-m":
			print """
 -c : cover file
 -s : secret file
 -x : extract secret from cover file
 -o : output
  	example :
 * hide data	:
 	-c "cover.png" -s "secret.png" -o "stega.png"
 * extract data	:
 	-x "stega.png" -o "recover.png"
			"""
		elif opt == "-c":
			cover = arg
		elif opt == "-s":
			secret = arg
		elif opt == "-x":
			recover = arg
		elif opt == "-o":
			output = arg
			if cover != None and secret != None:
				print "cover : " + cover
				print "secret : " + secret
				bind(cover, secret, output)
			elif extract != None:
				print "recover from : " + recover
				extract(recover, output)

main()